import 'package:json_annotation/json_annotation.dart';
import '../base_model.dart';

part 'duel_room.g.dart';


@JsonSerializable()
class DuelRoom extends BaseModel {

  DuelRoom({
    required this.roomId,
    required this.player1Id,
    required this.player2Id,
    this.isActive = true,
    required this.createdAt,
  }) : super(id: roomId.toString());

  factory DuelRoom.create({
    required String player1Id,
    required String player2Id,
  }) => DuelRoom(
    roomId: 0, // Will be auto-generated by the database
    player1Id: player1Id,
    player2Id: player2Id,
    createdAt: DateTime.now(),
  );


  @JsonKey(name: 'id')
  final int roomId;

  @JsonKey(name: 'player1_id')
  final String player1Id;
  @JsonKey(name: 'player2_id')
  final String player2Id;
  @JsonKey(name: 'is_active')
  final bool isActive;
  @JsonKey(name: 'created_at')
  final DateTime createdAt;

  factory DuelRoom.fromJson(Map<String, dynamic> json) => _$DuelRoomFromJson(json);
  @override
  Map<String, dynamic> toJson() => _$DuelRoomToJson(this);

  DuelRoom copyWith({
    String? id,
    int? roomId,
    String? player1Id,
    String? player2Id,
    bool? isActive,
  }) => DuelRoom(
    roomId: roomId ?? this.roomId,
    player1Id: player1Id ?? this.player1Id,
    player2Id: player2Id ?? this.player2Id,
    isActive: isActive ?? this.isActive,
    createdAt: createdAt,
  );

  @override
  String toString() {
    return 'DuelRoom(roomId: $roomId, player1Id: $player1Id, player2Id: $player2Id, isActive: $isActive, createdAt: $createdAt)';
  }
}